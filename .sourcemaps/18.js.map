{"version":3,"sources":["../../src/pages/verify-pin/verify-pin.module.ts","../../src/pages/verify-pin/verify-pin.ts"],"names":[],"mappings":"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","file":"18.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { VerifyPinPage } from './verify-pin';\n\n@NgModule({\n  declarations: [\n    VerifyPinPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(VerifyPinPage),\n  ],\n})\nexport class VerifyPinPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/verify-pin/verify-pin.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { CommonUtilityProvider } from '../../providers/common-utility/common-utility';\nimport { RestserviceProvider } from '../../providers/restservice/restservice';\nimport { ConstantsProvider } from '../../providers/constants/constants';\nimport { Network } from '@ionic-native/network';\n\n/**\n * Generated class for the VerifyPinPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-verify-pin',\n  templateUrl: 'verify-pin.html',\n})\nexport class VerifyPinPage {\n\n  customer: any = {\n    customerDetails: {}\n  };\n  invoice: any;\n  signature: any = '';\n  fromDate: any = '';\n  pinEntered: any = '';\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private commonUtility: CommonUtilityProvider,\n    private restService: RestserviceProvider,\n    private network: Network\n  ) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad VerifyPinPage');\n  }\n\n  ionViewDidEnter() {\n    console.log('ionViewDidEnter VerifyPinPage');\n\n    this.customer = this.navParams.get('customer');\n    this.invoice = this.navParams.get('invoice');\n    this.signature = this.navParams.get('signature');\n    this.fromDate = this.navParams.get('fromDate');\n  }\n\n  verifyPin() {\n\n    if (this.pinEntered == null || this.pinEntered == '') {\n      this.commonUtility.presentErrorToast('Please Enter Valid PIN');\n    } else {\n      console.log('customer pin = ' + JSON.stringify(this.customer.customerDetails.pin));\n\n      if (this.network.type == \"unknown\" || this.network.type == \"none\" || this.network.type == undefined) {\n        if (undefined == this.customer.customerDetails.pin\n          || null == this.customer.customerDetails.pin\n          || this.customer.customerDetails.pin == '') {\n          this.commonUtility.presentToast('Please Generate A PIN first to authorize access. Click the generate PIN button', 5000);\n        } else {\n          if (this.pinEntered == this.customer.customerDetails.pin)\n            this.navigateToSignaturePad();\n          else\n            this.commonUtility.presentToast('Please enter a valid PIN', 5000);\n        }\n      } else {\n        let verifyPinBody = {\n          cardCode: this.customer.customerDetails.cardCode,\n          customersPin: this.pinEntered\n        };\n\n        let verifyPinBodyApiEndpoint = ConstantsProvider.API_BASE_URL + ConstantsProvider.API_ENDPOINT_CUST_DTLS\n          + ConstantsProvider.URL_SEPARATOR + ConstantsProvider.API_ENDPOINT_VERIFY_PIN;\n\n        this.restService.postDetails(verifyPinBodyApiEndpoint, verifyPinBody)\n          .subscribe(\n            (res) => {\n              console.log('Response = ' + JSON.stringify(res));\n              this.navigateToSignaturePad();\n            }\n          );\n\n      }\n    }\n  }\n\n  navigateToSignaturePad() {\n    this.navCtrl.pop();\n    this.navCtrl.push('SignaturepadPage', {\n      invoice: this.invoice,\n      customer: this.customer,\n      signature: this.signature,\n      fromDate: this.fromDate\n    });\n  }\n\n  generatePin() {\n\n    console.log('generatePin VerifyPinPage');\n\n    this.navCtrl.push('GeneratePinReviewPage', {\n      customer: this.customer\n    });\n\n    // if (this.commonUtility.isNetworkAvailable()) {\n\n    //   let generatePinApiEndPoint: string = ConstantsProvider.API_BASE_URL + ConstantsProvider.API_ENDPOINT_CUST_DTLS\n    //     + ConstantsProvider.URL_SEPARATOR + this.customer.customerDetails.cardCode\n    //     + ConstantsProvider.URL_SEPARATOR + ConstantsProvider.API_ENDPOINT_GENERATE_PIN;\n\n    //   this.restService.getDetails(generatePinApiEndPoint)\n    //     .subscribe(\n    //       (res) => {\n    //         console.log('Response = ' + JSON.stringify(res.response));\n    //         let generatePinRes = res.response;\n\n    //         this.customer.customerDetails.pin = generatePinRes.customersPin;\n    //         console.log('customerDetails Pin = ' + this.customer.customerDetails.pin +\n    //           \", generatePinRes customersPin = \" + generatePinRes.customersPin);\n\n    //         this.commonUtility.presentToast('PIN Generated Succesfully And Sent to registered mobile No.', 5000);\n\n    //         this.commonUtility.saveCustomerRecord(this.customer);\n    //       }\n    //     )\n    // }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/verify-pin/verify-pin.ts"],"sourceRoot":""}