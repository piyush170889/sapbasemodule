{"version":3,"sources":["../../src/pages/summary-report/summary-report.module.ts","../../src/pages/summary-report/summary-report.ts"],"names":[],"mappings":"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","file":"20.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SummaryReportPage } from './summary-report';\n\n@NgModule({\n  declarations: [\n    SummaryReportPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SummaryReportPage),\n  ],\n})\nexport class SummaryReportPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/summary-report/summary-report.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Modal, ModalController } from 'ionic-angular';\nimport { DatabaseProvider } from '../../providers/database/database';\nimport { ConstantsProvider } from '../../providers/constants/constants';\nimport { CommonUtilityProvider } from '../../providers/common-utility/common-utility';\nimport { SQLiteObject } from '@ionic-native/sqlite';\nimport { Network } from '@ionic-native/network';\nimport { RestserviceProvider } from '../../providers/restservice/restservice';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation';\n\n\n/**\n * Generated class for the SummaryReportPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-summary-report',\n  templateUrl: 'summary-report.html',\n})\nexport class SummaryReportPage {\n\n  isDataSynching = false;\n  tillDate: string = '';\n  originalSummaryReportList: any[] = [];\n  summaryReportList: any[] = [];\n  orginalListDuplicate: any[] = [];\n  dispJan: boolean = true;\n  dispFeb: boolean = true;\n  dispMar: boolean = true;\n  dispApr: boolean = true;\n  dispMay: boolean = true;\n  dispJun: boolean = true;\n  dispJul: boolean = true;\n  dispAug: boolean = true;\n  dispSep: boolean = true;\n  dispOct: boolean = true;\n  dispNov: boolean = true;\n  dispDec: boolean = true;\n\n\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private databaseProvider: DatabaseProvider,\n    private commonUtility: CommonUtilityProvider,\n    private network: Network,\n    private restService: RestserviceProvider,\n    private modal: ModalController,\n    private screenOrientation: ScreenOrientation\n  ) {\n    // get current\n    console.log(\"screenOrientation = \" + this.screenOrientation.type); // logs the current orientation, example: 'landscape'\n\n    // set to landscape\n    if (this.screenOrientation.type != this.screenOrientation.ORIENTATIONS.LANDSCAPE)\n      this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.LANDSCAPE);\n\n    this.isDataSynching = false;\n\n    this.updateSummaryReportsDataFromDB();\n\n    this.databaseProvider.getMetaData(ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS_SUMM_RPT)\n      .subscribe(response => {\n        if (response && response.rows.length > 0) {\n\n          this.tillDate = response.rows.item(0).data;\n          console.log('tillDate = ' + this.tillDate + ', Response = ' + JSON.stringify(response));\n\n          let timeSinceLastSync: number = this.commonUtility.calculateDiffInMins(new Date(this.tillDate), new Date());\n          console.log('Till Date : ' + this.tillDate + ', Current Date = ' + new Date() + ', timeSinceLastSync = ' + timeSinceLastSync);\n\n          if (timeSinceLastSync >= 30) {\n            console.log('Synching Data');\n            this.syncSummaryReportsData();\n          } else {\n            console.log('Not Synching Data');\n          }\n        } else {\n          console.log('Synching Data');\n          this.syncSummaryReportsData();\n        }\n      }\n      );\n  }\n\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SummaryReportPage');\n  }\n\n  ionViewWillLeave() {\n    console.log('ionViewWillLeave SummaryReportPage');\n\n    //unlock screenorientation\n    this.screenOrientation.unlock();\n  }\n\n  updateSummaryReportsDataFromDB() {\n\n    console.log('updateSummaryReportsDataFromDB SummaryReportPage');\n\n    this.databaseProvider.getMetaData(ConstantsProvider.CONFIG_NM_SUMM_RPT_DATA)\n      .subscribe(\n        res => {\n          if (res.rows.length > 0) {\n\n            console.log('Summary Report Data = ' + res.rows.item(0).data);\n            let dbSummaryReportList: any[] = JSON.parse(res.rows.item(0).data);\n\n            dbSummaryReportList = this.commonUtility.resetSummaryReportDisplayData(dbSummaryReportList);\n\n            this.originalSummaryReportList = dbSummaryReportList;\n            this.summaryReportList = dbSummaryReportList;\n          }\n\n          this.orginalListDuplicate = this.originalSummaryReportList;\n        }\n        , (e) => {\n          console.log(JSON.stringify(e));\n        });\n  }\n\n  syncSummaryReportsData() {\n\n    console.log('syncSummaryReportsData SummaryReportPage');\n\n    console.log('syncVisitData VisitHistoryPage');\n\n    let summaryReportsDetailsApiEndpoint = ConstantsProvider.API_BASE_URL\n      + ConstantsProvider.API_ENDPOINT_CUST_DTLS + ConstantsProvider.URL_SEPARATOR\n      + ConstantsProvider.API_ENDPOINT_SUMM_RPT;\n\n    console.log('summaryReportsDetailsApiEndpoint = ' + summaryReportsDetailsApiEndpoint);\n\n    if (this.network.type != \"unknown\" && this.network.type != \"none\" && this.network.type != undefined) {\n\n      this.isDataSynching = true;\n\n      this.restService.getDetailsWithoutLoader(summaryReportsDetailsApiEndpoint)\n        .subscribe(\n          (response) => {\n            this.isDataSynching = false;\n\n            console.log('Summary Report Data = ' + JSON.stringify(response.response));\n            let summaryReportDetailsList: any[] = response.response;\n            let sortedSummaryReportDetailsList: any[] = [];\n\n            summaryReportDetailsList.forEach(\n              (summaryReportDetails: any) => {\n                summaryReportDetails.apr = null == summaryReportDetails.apr\n                  || summaryReportDetails.apr == '' ? 0 : Number.parseFloat(summaryReportDetails.apr).toFixed(2);\n                summaryReportDetails.may = null == summaryReportDetails.may\n                  || summaryReportDetails.may == '' ? 0 : Number.parseFloat(summaryReportDetails.may).toFixed(2);\n                summaryReportDetails.jun = null == summaryReportDetails.jun\n                  || summaryReportDetails.jun == '' ? 0 : Number.parseFloat(summaryReportDetails.jun).toFixed(2);\n                summaryReportDetails.jul = null == summaryReportDetails.jul\n                  || summaryReportDetails.jul == '' ? 0 : Number.parseFloat(summaryReportDetails.jul).toFixed(2);\n                summaryReportDetails.aug = null == summaryReportDetails.aug\n                  || summaryReportDetails.aug == '' ? 0 : Number.parseFloat(summaryReportDetails.aug).toFixed(2);\n                summaryReportDetails.sep = null == summaryReportDetails.sep\n                  || summaryReportDetails.sep == '' ? 0 : Number.parseFloat(summaryReportDetails.sep).toFixed(2);\n                summaryReportDetails.oct = null == summaryReportDetails.oct\n                  || summaryReportDetails.oct == '' ? 0 : Number.parseFloat(summaryReportDetails.oct).toFixed(2);\n                summaryReportDetails.nov = null == summaryReportDetails.nov\n                  || summaryReportDetails.nov == '' ? 0 : Number.parseFloat(summaryReportDetails.nov).toFixed(2);\n                summaryReportDetails.dec = null == summaryReportDetails.dec\n                  || summaryReportDetails.dec == '' ? 0 : Number.parseFloat(summaryReportDetails.dec).toFixed(2);\n                summaryReportDetails.jan = null == summaryReportDetails.jan\n                  || summaryReportDetails.jan == '' ? 0 : Number.parseFloat(summaryReportDetails.jan).toFixed(2);\n                summaryReportDetails.feb = null == summaryReportDetails.feb\n                  || summaryReportDetails.feb == '' ? 0 : Number.parseFloat(summaryReportDetails.feb).toFixed(2);\n                summaryReportDetails.mar = null == summaryReportDetails.mar\n                  || summaryReportDetails.mar == '' ? 0 : Number.parseFloat(summaryReportDetails.mar).toFixed(2);\n\n                sortedSummaryReportDetailsList.push(summaryReportDetails);\n              }\n            );\n\n            console.log('Sorted Summary Report = ' + JSON.stringify(sortedSummaryReportDetailsList));\n            summaryReportDetailsList = sortedSummaryReportDetailsList;\n\n            this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n\n              db.executeSql('SELECT data from metadata where configname=?',\n                [ConstantsProvider.CONFIG_NM_SUMM_RPT_DATA])\n                .then(\n                  res => {\n                    if (res.rows.length > 0) {\n                      this.updateSummaryReportDetailsFromApi(summaryReportDetailsList);\n                    } else {\n                      db.executeSql('INSERT INTO metadata(configname, data) VALUES(?,?)',\n                        [ConstantsProvider.CONFIG_NM_SUMM_RPT_DATA, JSON.stringify(summaryReportDetailsList)])\n                        .then(res => {\n                          console.log('Inserted summaryReportDetailsList Record');\n                          this.updateLastUpdatedTs();\n                        })\n                        .catch(e => {\n                          console.log(JSON.stringify(e))\n                          this.isDataSynching = false;\n                        })\n                    }\n                  }\n                )\n                .catch(e => {\n                  console.log(JSON.stringify(e))\n                  this.isDataSynching = false;\n                })\n            })\n              .catch(e => {\n                console.log(JSON.stringify(e))\n                this.isDataSynching = false;\n              })\n          },\n          (err) => {\n            this.isDataSynching = false;\n          }\n        );\n    } else {\n      this.commonUtility.presentErrorToast('No Internet Connection');\n      this.isDataSynching = false;\n    }\n  }\n\n  updateLastUpdatedTs() {\n\n    console.log('updateLastUpdatedTs() SummaryReportPage');\n\n    this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n      let updatedTs = new Date().toISOString();\n      this.tillDate = updatedTs;\n      db.executeSql('UPDATE metadata set data=? WHERE configname=?', [updatedTs,\n        ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS_SUMM_RPT])\n        .then(\n          res => {\n            console.log('Updated Last Updated Ts OF Summary Report');\n            this.updateSummaryReportsDataFromDB();\n            this.isDataSynching = false;\n          }\n        )\n        .catch(e => {\n          console.log(JSON.stringify(e))\n        })\n    })\n      .catch(e => {\n        console.log(JSON.stringify(e))\n      });\n  }\n\n  updateSummaryReportDetailsFromApi(summaryReportDetailsList: any[]) {\n\n    console.log('updateSummaryReportDetailsFromApi SummaryReportPage');\n\n    this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n      db.executeSql('UPDATE metadata set data=? WHERE configname=?', [JSON.stringify(summaryReportDetailsList),\n      ConstantsProvider.CONFIG_NM_SUMM_RPT_DATA])\n        .then(\n          res => {\n            console.log('Updated Summary Report Data');\n\n            db.executeSql('SELECT data from metadata where configname=?',\n              [ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS_SUMM_RPT])\n              .then(\n                res => {\n                  if (res.rows.length > 0) {\n                    this.updateLastUpdatedTs();\n                  } else {\n                    db.executeSql('INSERT INTO metadata(configname, data) VALUES(?,?)',\n                      [ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS_SUMM_RPT, new Date().toISOString()])\n                      .then(res => {\n                        console.log('Inserted Summary Report Last Updated Ts Record');\n                        this.updateSummaryReportsDataFromDB();\n                        this.isDataSynching = false;\n                      })\n                      .catch(e => {\n                        console.log(JSON.stringify(e))\n                        this.isDataSynching = false;\n                      });\n                  }\n                }\n              );\n          }\n        )\n        .catch(e => {\n          console.log(JSON.stringify(e))\n        });\n    })\n      .catch(e => {\n        console.log(JSON.stringify(e))\n      });\n  }\n\n  sortByCust() {\n    console.log('sortByCust() SummaryReportsPage');\n\n    let custFilterModal: Modal = this.modal.create('CustFilterModalPage', {\n      summaryReportList: this.summaryReportList\n    });\n\n    custFilterModal.present();\n\n    custFilterModal.onDidDismiss(\n      (custFilterModalData) => {\n        console.log('custFilterModalData = ' + JSON.stringify(custFilterModalData));\n\n        if (custFilterModalData.isAdded) {\n          console.log('summaryReportList = ' + JSON.stringify(custFilterModalData.summaryReportList));\n          this.summaryReportList = custFilterModalData.summaryReportList;\n        }\n      });\n  }\n\n  sortBySalesEmp() {\n    console.log('sortBySalesEmp() SummaryReportsPage')\n\n    let saleEmpFilterModal: Modal = this.modal.create('SaleempFilterModalPage', {\n      summaryReportList: this.summaryReportList\n    });\n\n    saleEmpFilterModal.present();\n\n    saleEmpFilterModal.onDidDismiss(\n      (saleEmpFilterModalData) => {\n        console.log('saleEmpFilterModalData = ' + JSON.stringify(saleEmpFilterModalData));\n\n        if (saleEmpFilterModalData.isAdded) {\n          console.log('summaryReportList = ' + JSON.stringify(saleEmpFilterModalData.summaryReportList));\n          this.summaryReportList = saleEmpFilterModalData.summaryReportList;\n        }\n      });\n  }\n\n  sortByBrand() {\n    console.log('sortByBrand() SummaryReportsPage')\n\n\n    let brandFilterModal: Modal = this.modal.create('BrandFilterModalPage', {\n      summaryReportList: this.summaryReportList\n    });\n\n    brandFilterModal.present();\n\n    brandFilterModal.onDidDismiss(\n      (brandFilterModalData) => {\n        console.log('brandFilterModalData = ' + JSON.stringify(brandFilterModalData));\n\n        if (brandFilterModalData.isAdded) {\n          console.log('summaryReportList = ' + JSON.stringify(brandFilterModalData.summaryReportList));\n          this.summaryReportList = brandFilterModalData.summaryReportList;\n        }\n      });\n  }\n\n  clearFilters() {\n    console.log('clearFilters CustFilterModalPage');\n\n    this.summaryReportList = this.originalSummaryReportList;\n    this.summaryReportList = this.commonUtility.resetSummaryReportDisplayData(this.summaryReportList);\n\n    this.dispJan = true;\n    this.dispFeb = true;\n    this.dispMar = true;\n    this.dispApr = true;\n    this.dispMay = true;\n    this.dispJun = true;\n    this.dispJul = true;\n    this.dispAug = true;\n    this.dispSep = true;\n    this.dispOct = true;\n    this.dispNov = true;\n    this.dispDec = true;\n  }\n\n  applyMonthFilters() {\n\n    console.log('applyMonthFilters CustFilterModalPage');\n\n\n    let monthFilterModal: Modal = this.modal.create('MonthFilterModalPage');\n\n    monthFilterModal.present();\n\n    monthFilterModal.onDidDismiss(\n      (monthFilterModalData) => {\n        console.log('monthFilterModalData = ' + JSON.stringify(monthFilterModalData));\n\n        if (monthFilterModalData.isAdded) {\n          console.log('monthFilterModalData = ' + JSON.stringify(monthFilterModalData));\n          this.dispJan = monthFilterModalData.dispJan;\n          this.dispFeb = monthFilterModalData.dispFeb;\n          this.dispMar = monthFilterModalData.dispMar;\n          this.dispApr = monthFilterModalData.dispApr;\n          this.dispMay = monthFilterModalData.dispMay;\n          this.dispJun = monthFilterModalData.dispJun;\n          this.dispJul = monthFilterModalData.dispJul;\n          this.dispAug = monthFilterModalData.dispAug;\n          this.dispSep = monthFilterModalData.dispSep;\n          this.dispOct = monthFilterModalData.dispOct;\n          this.dispNov = monthFilterModalData.dispNov;\n          this.dispDec = monthFilterModalData.dispDec;\n        }\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/summary-report/summary-report.ts"],"sourceRoot":""}