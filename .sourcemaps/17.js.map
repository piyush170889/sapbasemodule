{"version":3,"sources":["../../src/pages/visit-history/visit-history.module.ts","../../src/pages/visit-history/visit-history.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACG;AAUnD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QARlC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,wEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,wEAAgB,CAAC;aAC3C;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZO;AAC0D;AAC1D;AAC4C;AACd;AAEM;AAC9B;AACqB;AAEf;AACe;AACb;AAGxD;;;;;GAKG;AAOH;IAqBE,0BACS,OAAsB,EACtB,SAAoB,EACnB,aAAoC,EACpC,OAAgB,EAChB,WAAgC,EAChC,gBAAkC,EAClC,KAAsB,EACtB,UAAsB,EACtB,WAAwB,EACxB,gBAAkC,EAClC,iBAAoC;QAX9C,iBAwCC;QAvCQ,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,kBAAa,GAAb,aAAa,CAAuB;QACpC,YAAO,GAAP,OAAO,CAAS;QAChB,gBAAW,GAAX,WAAW,CAAqB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAiB;QACtB,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,sBAAiB,GAAjB,iBAAiB,CAAmB;QA9B9C,cAAS,GAAW,CAAC,CAAC;QACtB,aAAQ,GAAQ,6CAAM,CAAC;QACvB,aAAQ,GAAW,EAAE,CAAC;QACtB,mBAAc,GAAY,KAAK,CAAC;QAChC,qBAAgB,GAAU,EAAE,CAAC;QAC7B,YAAO,GAAW,EAAE,CAAC;QACrB,gCAAgC;QAChC,yBAAoB,GAAU,EAAE,CAAC;QACjC,kBAAa,GAAe,EAAE,CAAC;QAC/B,eAAU,GAAU,EAAE,CAAC;QACvB,YAAO,GAAY,KAAK,CAAC;QACzB,qBAAgB,GAAQ,IAAI,CAAC;QAC7B,6BAAwB,GAAU,EAAE,CAAC;QACrC,aAAQ,GAAQ,EAAE,CAAC;QACnB,WAAM,GAAQ,EAAE,CAAC;QACjB,mBAAc,GAAQ,EAAE,CAAC;QACzB,8BAAyB,GAAU,EAAE,CAAC;QAiBpC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,yFAAiB,CAAC,gCAAgC,CAAC;aAClF,SAAS,CAAC,kBAAQ;YACjB,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAEzC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,KAAI,CAAC,QAAQ,GAAG,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAExF,IAAI,iBAAiB,GAAW,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;gBAC5G,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,KAAI,CAAC,QAAQ,GAAG,mBAAmB,GAAG,IAAI,IAAI,EAAE,GAAG,wBAAwB,GAAG,iBAAiB,CAAC,CAAC;gBAE9H,EAAE,CAAC,CAAC,iBAAiB,IAAI,EAAE,CAAC,CAAC,CAAC;oBAC5B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,KAAI,CAAC,aAAa,EAAE,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,KAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC;QACH,CAAC,CACA,CAAC;IACN,CAAC;IAED,yCAAc,GAAd;QAEE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IAED,yCAAc,GAAd;QAEE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAE/C,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,wCAAa,GAAb;QAAA,iBAgEC;QA9DC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAE9C,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,oCAAoC,GAAG,yFAAiB,CAAC,YAAY;cACrE,yFAAiB,CAAC,kBAAkB,GAAG,yFAAiB,CAAC,aAAa;cACtE,yFAAiB,CAAC,wBAAwB,GAAG,yFAAiB,CAAC,aAAa;cAC5E,yFAAiB,CAAC,4BAA4B,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,oCAAoC,CAAC,CAAC;QAE9F,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;YAEpG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE3B,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oCAAoC,CAAC;iBAC3E,SAAS,CACR,UAAC,QAAQ;gBACP,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAE5B,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzE,IAAI,gBAAgB,GAAU,QAAQ,CAAC,QAAQ,CAAC;gBAEhD,KAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;oBAEhE,EAAE,CAAC,UAAU,CAAC,8CAA8C,EAC1D,CAAC,yFAAiB,CAAC,qBAAqB,CAAC,CAAC;yBACzC,IAAI,CACH,aAAG;wBACD,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACxB,KAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,CAAC;wBACnD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,EAAE,CAAC,UAAU,CAAC,oDAAoD,EAChE,CAAC,yFAAiB,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;iCAC3E,IAAI,CAAC,aAAG;gCACP,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;gCACtC,KAAI,CAAC,mBAAmB,EAAE,CAAC;4BAC7B,CAAC,CAAC;iCACD,KAAK,CAAC,WAAC;gCACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gCAC9B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;4BAC9B,CAAC,CAAC;wBACN,CAAC;oBACH,CAAC,CACF;yBACA,KAAK,CAAC,WAAC;wBACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC9B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC9B,CAAC,CAAC;gBACN,CAAC,CAAC;qBACC,KAAK,CAAC,WAAC;oBACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC9B,CAAC,CAAC;YACN,CAAC,EACD,UAAC,GAAG;gBACF,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC,CACF,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;YAC/D,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,2CAAgB,GAAhB;QAAA,iBA+DC;QA7DC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;YAEpG,IAAI,uBAAuB,GAAW,yFAAiB,CAAC,YAAY,GAAG,yFAAiB,CAAC,YAAY,CAAC;YAEtG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,uBAAuB,CAAC;iBAC9D,SAAS,CACR,UAAC,QAAQ;gBACP,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAE5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpE,IAAI,mBAAmB,GAAU,QAAQ,CAAC,QAAQ,CAAC;gBAEnD,KAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;oBAEhE,EAAE,CAAC,UAAU,CAAC,8CAA8C,EAC1D,CAAC,yFAAiB,CAAC,wBAAwB,CAAC,CAAC;yBAC5C,IAAI,CACH,aAAG;wBACD,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACxB,KAAI,CAAC,6BAA6B,CAAC,mBAAmB,CAAC,CAAC;wBAC1D,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,EAAE,CAAC,UAAU,CAAC,oDAAoD,EAChE,CAAC,yFAAiB,CAAC,wBAAwB,EAAE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC;iCACjF,IAAI,CAAC,aAAG;gCAEP,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gCAExC,KAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC;gCAEzC,KAAI,CAAC,2BAA2B,EAAE,CAAC;gCAEnC,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;4BAC9B,CAAC,CAAC;iCACD,KAAK,CAAC,WAAC;gCACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gCAC9B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;4BAC9B,CAAC,CAAC;wBACN,CAAC;oBACH,CAAC,CACF;yBACA,KAAK,CAAC,WAAC;wBACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC9B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC9B,CAAC,CAAC;gBACN,CAAC,CAAC;qBACC,KAAK,CAAC,WAAC;oBACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC9B,CAAC,CAAC;YACN,CAAC,EACD,UAAC,GAAG;gBACF,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC,CACF,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;YAC/D,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,wDAA6B,GAA7B,UAA8B,mBAA0B;QAAxD,iBAoBC;QAlBC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;YAChE,EAAE,CAAC,UAAU,CAAC,+CAA+C,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC;gBACnG,yFAAiB,CAAC,wBAAwB,CAAC,CAAC;iBACzC,IAAI,CACH,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBAEvC,KAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC;gBACzC,KAAI,CAAC,2BAA2B,EAAE,CAAC;YACrC,CAAC,CACF;iBACA,KAAK,CAAC,WAAC;gBACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;aACC,KAAK,CAAC,WAAC;YACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC;IACN,CAAC;IAED,sDAA2B,GAA3B;QAEE,IAAI,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC/C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yFAAiB,CAAC,4BAA4B,EAAE,eAAe,CAAC,CAAC;QAE/F,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;IAClC,CAAC;IAED,kCAAO,GAAP;QAEE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5C,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAE7B,yDAAyD;QACzD,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAExC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,UAAC,eAAoB;gBAEjF,IAAI,kBAAkB,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;gBAEjD,EAAE,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,YAAY;uBACpC,eAAe,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC;oBACxF,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACtE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC;YAClD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAC5D,CAAC;IACH,CAAC;IAED,oDAAyB,GAAzB,UAA0B,gBAAuB;QAAjD,iBAmCC;QAjCC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;YAChE,EAAE,CAAC,UAAU,CAAC,+CAA+C,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;gBAChG,yFAAiB,CAAC,qBAAqB,CAAC,CAAC;iBACtC,IAAI,CACH,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;gBAErC,EAAE,CAAC,UAAU,CAAC,8CAA8C,EAC1D,CAAC,yFAAiB,CAAC,gCAAgC,CAAC,CAAC;qBACpD,IAAI,CACH,aAAG;oBACD,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACxB,KAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,EAAE,CAAC,UAAU,CAAC,oDAAoD,EAChE,CAAC,yFAAiB,CAAC,gCAAgC,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;6BAC9E,IAAI,CAAC,aAAG;4BACP,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;4BAC7D,8BAA8B;wBAChC,CAAC,CAAC;6BACD,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;oBAChD,CAAC;gBACH,CAAC,CACF,CAAC;YACN,CAAC,CACF;iBACA,KAAK,CAAC,WAAC;gBACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;aACC,KAAK,CAAC,WAAC;YACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC;IACN,CAAC;IAED,8CAAmB,GAAnB;QAAA,iBAqBC;QAnBC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;YAChE,IAAI,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACzC,KAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC1B,EAAE,CAAC,UAAU,CAAC,+CAA+C,EAAE,CAAC,SAAS;gBACvE,yFAAiB,CAAC,gCAAgC,CAAC,CAAC;iBACnD,IAAI,CACH,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;gBACxD,KAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC,CACF;iBACA,KAAK,CAAC,WAAC;gBACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC;QACN,CAAC,CAAC;aACC,KAAK,CAAC,WAAC;YACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC;IACN,CAAC;IAED,iDAAsB,GAAtB;QAAA,iBAmBC;QAjBC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,yFAAiB,CAAC,qBAAqB,CAAC;aACvE,SAAS,CACR,aAAG;YACD,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAExB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACrD,KAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAElE,KAAI,CAAC,8BAA8B,EAAE,CAAC;YACxC,CAAC;YAED,iDAAiD;YACjD,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,wBAAwB,CAAC;QAC5D,CAAC,EACC,UAAC,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACT,CAAC;IAED,yDAA8B,GAA9B;QAAA,iBAoEC;QAlEC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,yFAAiB,CAAC,eAAe,CAAC;aACjE,SAAS,CACR,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,EAAE,CAAC,CAAC,SAAS,IAAI,GAAG,IAAI,WAAW,IAAI,GAAG,CAAC;gBACzC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACxB,IAAI,OAAO,GAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACzC,KAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACnE,CAAC;gBAAC,IAAI;oBACJ,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3B,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/D,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,IAAI,IAAI,IAAI,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC/C,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,yFAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/D,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;oBAClC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;oBAC3B,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,wBAAwB,CAAC;oBACtD,KAAI,CAAC,yBAAyB,GAAG,KAAI,CAAC,gBAAgB,CAAC;oBACvD,KAAI,CAAC,sBAAsB,EAAE,CAAC;gBAChC,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,yFAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEtE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;oBAClC,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,yFAAiB,CAAC,mBAAmB,CAAC;yBACrE,SAAS,CACR,UAAC,GAAG;wBACF,IAAI,WAAW,GAAQ,IAAI,CAAC;wBAE5B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACxB,IAAI,OAAO,GAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;4BACzC,WAAW,GAAG,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;wBAC7D,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;wBACpC,CAAC;wBAED,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC;4BACvC,IAAI,gBAAc,GAAW,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC;4BAE5D,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;4BAE9C,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;4BAC3B,KAAI,CAAC,wBAAwB,CAAC,OAAO,CACnC,UAAC,eAAoB;gCACnB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC,SAAS,GAAG,qBAAqB,GAAG,gBAAc,CAAC,CAAC;gCAClG,EAAE,CAAC,CAAC,eAAe,CAAC,SAAS,IAAI,gBAAc,CAAC;oCAC9C,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;4BAChD,CAAC,CACF,CAAC;4BACF,KAAI,CAAC,sBAAsB,EAAE,CAAC;4BAC9B,KAAI,CAAC,yBAAyB,GAAG,KAAI,CAAC,gBAAgB,CAAC;wBACzD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;wBACpC,CAAC;oBACH,CAAC,CACF,CAAC;gBACN,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;gBAChC,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CACF,CAAC;IACN,CAAC;IAED,yCAAc,GAAd,UAAe,QAAkB;QAE/B,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAEvC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAGD,iDAAsB,GAAtB,UAAuB,SAAmB,EAAE,cAAuB;QAAnE,iBA4CC;QA1CC,IAAI,sBAAsB,GAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,EAAE;YACxE,cAAc,EAAE,cAAc;YAC9B,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;QAEH,sBAAsB,CAAC,OAAO,EAAE,CAAC;QAEjC,sBAAsB,CAAC,YAAY,CACjC,UAAC,0BAA0B;YACzB,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC,CAAC;YAE1F,EAAE,CAAC,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,CAAC;gBAEvC,IAAI,qBAAmB,GAAa,0BAA0B,CAAC,YAAY,CAAC;gBAE5E,IAAI,sBAAsB,GAAW,yFAAiB,CAAC,YAAY,GAAG,yFAAiB,CAAC,qBAAqB,CAAC;gBAE9G,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,sBAAsB,EAAE,qBAAmB,CAAC;qBACtE,SAAS,CACR,UAAC,QAAQ;oBAEP,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBAEnB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnE,qBAAmB,CAAC,gBAAgB,GAAG,QAAQ,CAAC,QAAQ,CAAC;wBACzD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAmB,CAAC,CAAC;wBAC7C,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;wBACvD,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,iCAAiC,EAAE,IAAI,CAAC,CAAC;oBAC3E,CAAC;oBAAC,IAAI,CAAC,CAAC;wBAEN,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACtE,IAAI,KAAK,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;wBAClD,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACf,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,qBAAmB,CAAC;4BAChD,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;4BACxD,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;wBACzE,CAAC;oBACH,CAAC;gBACH,CAAC,CACF,CAAC;YACN,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAU,GAAV;QAAA,iBAyCC;QAvCC,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAE3C,IAAI,aAAa,GAAY,KAAK,CAAC;QACnC,IAAI,WAAgB,CAAC;QAErB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,UAAC,YAAiB;YAEhB,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,IAAI,YAAY,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC7D,aAAa,GAAG,IAAI,CAAC;gBACrB,WAAW,GAAG,YAAY,CAAC;YAC7B,CAAC;QACH,CAAC,CACF,CAAC;QAEF,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,eAAe,GAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAEjE,eAAe,CAAC,OAAO,EAAE,CAAC;YAE1B,eAAe,CAAC,YAAY,CAC1B,UAAC,mBAAmB;gBAClB,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAE5E,EAAE,CAAC,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC;oBAEhC,IAAI,kBAAkB,GAAU,EAAE,CAAC;oBACnC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;oBAC5D,KAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,MAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;oBAEzE,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yFAAiB,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAE9G,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;gBACtE,CAAC;YACH,CAAC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,oCAAS,GAAT,UAAU,YAAiB;QAEzB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAE1C,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,+CAAoB,GAApB,UAAqB,YAAiB,EAAE,gBAAyB;QAAjE,iBAuDC;QArDC,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,UAAC,SAAS;YACjD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,wBAAwB;gBACxB,IAAI,cAAc,GAAU,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE;oBAC7D,YAAY,EAAE,YAAY;oBAC1B,gBAAgB,EAAE,gBAAgB;iBACnC,CAAC,CAAC;gBAEH,cAAc,CAAC,OAAO,EAAE,CAAC;gBAEzB,cAAc,CAAC,YAAY,CACzB,UAAC,kBAAkB;oBACjB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAE1E,EAAE,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;wBAE/B,IAAI,eAAa,GAAQ,kBAAkB,CAAC,aAAa,CAAC;wBAE1D,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,eAAa,CAAC,CAAC,CAAC;wBAEhE,KAAI,CAAC,iBAAiB,EAAE;6BACrB,IAAI,CAAC,UAAC,IAAI;4BAET,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;4BACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;4BACrC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,OAAO,GAAG,qBAAqB,GAAG,QAAQ,CAAC,CAAC;4BAE7E,IAAI,YAAY,GAAW,IAAI,CAAC;4BAChC,KAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC;iCACpD,SAAS,CACR,UAAC,QAAa;gCACZ,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACtD,YAAY,GAAG,QAAQ,CAAC;gCAExB,KAAI,CAAC,gBAAgB,CAAC,eAAa,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;4BACtF,CAAC,EACD,UAAC,GAAQ;gCACP,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gCAC9C,KAAI,CAAC,gBAAgB,CAAC,eAAa,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;4BACtF,CAAC,CACF,CAAC;wBACN,CAAC,CAAC;6BACD,KAAK,CAAC,WAAC;4BACN,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC5C,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,uCAAuC,CAAC,CAAC;wBAChF,CAAC,CAAC,CAAC;oBACP,CAAC;gBACH,CAAC,CACF,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,CAAC,wBAAwB,EAAE,CAAC;YAC7C,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAiB,GAAjB;QAEE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;IAC/C,CAAC;IAED,2CAAgB,GAAhB,UAAiB,aAAa,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY;QAA7E,iBA6BC;QA3BC,IAAI,oBAAoB,GAAG,yFAAiB,CAAC,YAAY,GAAG,yFAAiB,CAAC,kBAAkB;cAC5F,yFAAiB,CAAC,aAAa,GAAG,yFAAiB,CAAC,wBAAwB;cAC5E,yFAAiB,CAAC,aAAa,GAAG,yFAAiB,CAAC,4BAA4B,CAAC;QAErF,IAAI,gBAAgB,GAAG;YACrB,kBAAkB,EAAE,aAAa,CAAC,kBAAkB;YACpD,OAAO,EAAE,aAAa,CAAC,OAAO;YAC9B,YAAY,EAAE,OAAO;YACrB,aAAa,EAAE,QAAQ;YACvB,YAAY,EAAE,YAAY;SAC3B;QAED,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,oBAAoB,EAAE,gBAAgB,CAAC;aAChE,SAAS,CACR,UAAC,QAAQ;YACP,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YAE/D,IAAI,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAEjD,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yFAAiB,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAE9G,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;YACrE,CAAC;QACH,CAAC,CACF,CAAC;IACN,CAAC;IAED,gDAAqB,GAArB,UAAsB,KAAU;QAAhC,iBA4DC;QA1DC,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,sBAAsB,EAAE;YACpE,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC;YACd,EAAE,EAAE,KAAK;SACV,CAAC,CAAC;QAEH,OAAO,CAAC,YAAY,CAClB,UAAC,IAAI;YACH,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1B,IAAI,iBAAiB,GAAW,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAChE,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,iBAAiB,CAAC,CAAC;gBAExD,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAE1B,KAAK,CAAC,CAAI,eAAe;wBACvB,IAAI,mBAAmB,GAAU,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,uBAAuB,EAAE;4BAC1E,SAAS,EAAE,IAAI;4BACf,QAAQ,EAAE,EAAE;4BACZ,MAAM,EAAE,EAAE;4BACV,cAAc,EAAE,EAAE;4BAClB,cAAc,EAAE,IAAI;yBACrB,CAAC,CAAC;wBAEH,mBAAmB,CAAC,OAAO,EAAE,CAAC;wBAE9B,mBAAmB,CAAC,YAAY,CAC9B,UAAC,uBAAuB;4BACtB,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC;4BAEpF,EAAE,CAAC,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,CAAC;gCACpC,KAAI,CAAC,gBAAgB,GAAG,uBAAuB,CAAC,uBAAuB,CAAC;gCACxE,KAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;gCACjD,KAAI,CAAC,MAAM,GAAG,uBAAuB,CAAC,MAAM,CAAC;gCAC7C,KAAI,CAAC,cAAc,GAAG,uBAAuB,CAAC,cAAc,CAAC;gCAE7D,IAAI,kBAAkB,GAAY,KAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gCAEtF,KAAI,CAAC,+BAA+B,CAAC,kBAAkB,EACrD,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;4BAClG,CAAC;wBACH,CAAC,CAAC,CAAC;wBACL,KAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC;wBACnC,KAAK,CAAC;oBAER,KAAK,CAAC,CAAI,mBAAmB;wBAC3B,KAAI,CAAC,sBAAsB,EAAE,CAAC;wBAC9B,KAAI,CAAC,sBAAsB,EAAE,CAAC;wBAC9B,KAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC;wBACnC,KAAK,CAAC;oBAER;wBACE,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;wBAC3C,KAAK,CAAC;gBACV,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAsB,GAAtB;QAAA,iBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAExB,UAAC,CAAC,EAAE,CAAC,IAAK,YAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAzJ,CAAyJ,CACpK,CAAC;IACJ,CAAC;IAED,0DAA+B,GAA/B,UAAgC,kBAA2B,EAAE,iBAA0B,EACrF,eAAwB,EAAE,wBAAiC;QAD7D,iBAmMC;QAhMC,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,kBAAkB,GAAG,wBAAwB,GAAG,iBAAiB;cACnG,sBAAsB,GAAG,eAAe,GAAG,+BAA+B,GAAG,wBAAwB,CAAC,CAAC;QAE3G,EAAE,CAAC,CAAC,kBAAkB,IAAI,iBAAiB,IAAI,eAAe,IAAI,wBAAwB,CAAC,CAAC,CAAC;YAC3F,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CACD,YAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,KAAI,CAAC,gBAAgB,CAAC,QAAQ;uBAC7D,YAAY,CAAC,SAAS,IAAI,KAAI,CAAC,cAAc,CAAC,UAAU;uBACxD,uBAAuB,IAAI,KAAI,CAAC,QAAQ;uBACxC,uBAAuB,IAAI,KAAI,CAAC,MACrC,CAAC;oBACC,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,kBAAkB,IAAI,iBAAiB,IAAI,eAAe,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACnG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,KAAI,CAAC,gBAAgB,CAAC,QAAQ;uBAC/D,uBAAuB,IAAI,KAAI,CAAC,QAAQ;uBACxC,uBAAuB,IAAI,KAAI,CAAC,MACrC,CAAC;oBACC,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,kBAAkB,IAAI,iBAAiB,IAAI,CAAC,eAAe,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACpG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CACD,YAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,KAAI,CAAC,gBAAgB,CAAC,QAAQ;uBAC7D,uBAAuB,IAAI,KAAI,CAAC,QACrC,CAAC;oBACC,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,kBAAkB,IAAI,CAAC,iBAAiB,IAAI,CAAC,eAAe,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACrG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;sBAC7G,eAAe,GAAG,KAAI,CAAC,QAAQ,GAAG,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEtH,EAAE,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;oBACnE,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,kBAAkB,IAAI,CAAC,iBAAiB,IAAI,eAAe,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACpG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CACD,YAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,KAAI,CAAC,gBAAgB,CAAC,QAAQ;uBAC7D,uBAAuB,IAAI,KAAI,CAAC,MACrC,CAAC;oBACC,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,IAAI,eAAe,IAAI,wBAAwB,CAAC,CAAC,CAAC;YACnG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CACD,YAAY,CAAC,SAAS,IAAI,KAAI,CAAC,cAAc,CAAC,UAAU;uBACrD,uBAAuB,IAAI,KAAI,CAAC,QAAQ;uBACxC,uBAAuB,IAAI,KAAI,CAAC,MACrC,CAAC;oBACC,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,IAAI,eAAe,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACpG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CAAC,uBAAuB,IAAI,KAAI,CAAC,QAAQ,IAAI,uBAAuB,IAAI,KAAI,CAAC,MAAM,CAAC;oBACrF,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,IAAI,CAAC,eAAe,IAAI,wBAAwB,CAAC,CAAC,CAAC;YACpG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CACD,YAAY,CAAC,SAAS,IAAI,KAAI,CAAC,cAAc,CAAC,UAAU;uBACrD,uBAAuB,IAAI,KAAI,CAAC,QACrC,CAAC;oBACC,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,IAAI,CAAC,eAAe,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACrG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CAAC,uBAAuB,IAAI,KAAI,CAAC,QAAQ,CAAC;oBAC3C,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,IAAI,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,IAAI,wBAAwB,CAAC,CAAC,CAAC;YACpG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAChB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CACD,YAAY,CAAC,SAAS,IAAI,KAAI,CAAC,cAAc,CAAC,UAAU;uBACrD,uBAAuB,IAAI,KAAI,CAAC,MACrC,CAAC;oBACC,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,IAAI,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACrG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAC3D,UAAC,YAAiB;gBAEhB,IAAI,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAEhH,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,eAAe,GAAG,KAAI,CAAC,QAAQ;sBACrF,aAAa,GAAG,KAAI,CAAC,MAAM,GAAG,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpF,EAAE,CAAC,CAAC,uBAAuB,IAAI,KAAI,CAAC,MAAM,CAAC;oBACzC,MAAM,CAAC,IAAI,CAAC;gBACd,IAAI;oBACF,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CACF,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,kCAAO,GAAP,UAAQ,YAAiB;QAEvB,EAAE,CAAC,CACD,SAAS,IAAI,YAAY,IAAI,WAAW,IAAI,YAAY;eACrD,YAAY,IAAI,EAAE,IAAI,YAAY,IAAI,IAAI;eAC1C,EAAE,IAAI,YAAY,IAAI,IAAI,IAAI,YACnC,CAAC;YACC,MAAM,CAAC,IAAI,CAAC;QACd,IAAI;YACF,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,wCAAa,GAAb;QAEE,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAE9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE;YACvC,IAAI,EAAE,6BAA6B;YACnC,qBAAqB,EAAE,IAAI,CAAC,gBAAgB;SAC7C,CAAC;IACJ,CAAC;IAl4BU,gBAAgB;QAJ5B,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;WACG;SAClC,CAAC;6EAuB+B;YACX,uGAAS;YACJ,uEAAqB;YAC3B,+FAAO;YACH,uFAAmB;YACd,uEAAgB;YAC3B,6EAAe;YACV,+EAAU;YACT,sFAAW;YACN,wEAAgB;YACf,aAAiB;OAhCnC,gBAAgB,CAm4B5B;IAAD,CAAC;AAAA;SAn4BY,gBAAgB,gB","file":"17.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { VisitHistoryPage } from './visit-history';\n\n@NgModule({\n  declarations: [\n    VisitHistoryPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(VisitHistoryPage),\n  ],\n})\nexport class VisitHistoryPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/visit-history/visit-history.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Modal, ModalController, PopoverController } from 'ionic-angular';\nimport * as moment from 'moment-timezone';\nimport { CommonUtilityProvider } from '../../providers/common-utility/common-utility';\nimport { ConstantsProvider } from '../../providers/constants/constants';\nimport { SQLiteObject } from '@ionic-native/sqlite';\nimport { RestserviceProvider } from '../../providers/restservice/restservice';\nimport { Network } from '@ionic-native/network';\nimport { DatabaseProvider } from '../../providers/database/database';\nimport { GeoFence } from '../visit-add-site/domain-geofence';\nimport { Diagnostic } from '@ionic-native/diagnostic';\nimport { GeocoderProvider } from '../../providers/geocoder/geocoder';\nimport { Geolocation } from '@ionic-native/geolocation';\n\n\n/**\n * Generated class for the VisitHistoryPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-visit-history',\n  templateUrl: 'visit-history.html',\n})\nexport class VisitHistoryPage {\n\n  sortOrder: number = 0;\n  momentjs: any = moment;\n  tillDate: string = '';\n  isDataSynching: boolean = false;\n  visitHistoryList: any[] = [];\n  myInput: string = '';\n  // orginalVisitList: any[] = [];\n  orginalListDuplicate: any[] = [];\n  locationsList: GeoFence[] = [];\n  rolesArray: any[] = [];\n  isAdmin: boolean = false;\n  selectedCustomer: any = null;\n  originalVisitHistoryList: any[] = [];\n  fromDate: any = '';\n  toDate: any = '';\n  salesExecutive: any = '';\n  visitHistoryListDuplicate: any[] = [];\n\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private commonUtility: CommonUtilityProvider,\n    private network: Network,\n    private restService: RestserviceProvider,\n    private databaseProvider: DatabaseProvider,\n    private modal: ModalController,\n    private diagnostic: Diagnostic,\n    private geolocation: Geolocation,\n    private geoCoderProvider: GeocoderProvider,\n    private popOverController: PopoverController\n  ) {\n\n    this.isDataSynching = false;\n\n    this.updateVisitsDataFromDB();\n\n    this.databaseProvider.getMetaData(ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS_VISITS)\n      .subscribe(response => {\n        if (response && response.rows.length > 0) {\n\n          this.tillDate = response.rows.item(0).data;\n          console.log('tillDate = ' + this.tillDate + ', Response = ' + JSON.stringify(response));\n\n          let timeSinceLastSync: number = this.commonUtility.calculateDiffInMins(new Date(this.tillDate), new Date());\n          console.log('Till Date : ' + this.tillDate + ', Current Date = ' + new Date() + ', timeSinceLastSync = ' + timeSinceLastSync);\n\n          if (timeSinceLastSync >= 30) {\n            console.log('Synching Data');\n            this.syncVisitData();\n          } else {\n            console.log('Not Synching Data');\n          }\n        } else {\n          console.log('Synching Data');\n          this.syncVisitData();\n        }\n      }\n      );\n  }\n\n  ionViewDidLoad() {\n\n    console.log('ionViewDidLoad VisitHistoryPage');\n  }\n\n  addNewLocation() {\n\n    console.log('addNewLocation VisitHistoryPage');\n\n    this.createAddGeoFenceModal(null, true);\n  }\n\n  syncVisitData() {\n\n    console.log('syncVisitData VisitHistoryPage');\n\n    this.syncLocationData();\n\n    let adminUsersLocationDetailsApiEndpoint = ConstantsProvider.API_BASE_URL\n      + ConstantsProvider.API_ENDPOINT_USERS + ConstantsProvider.URL_SEPARATOR\n      + ConstantsProvider.API_ENDPOINT_ADMIN_USERS + ConstantsProvider.URL_SEPARATOR\n      + ConstantsProvider.API_ENDPOINT_SYNC_VISIT_DATA;\n    console.log('adminUsersLocationDetailsApiEndpoint = ' + adminUsersLocationDetailsApiEndpoint);\n\n    if (this.network.type != \"unknown\" && this.network.type != \"none\" && this.network.type != undefined) {\n\n      this.isDataSynching = true;\n\n      this.restService.getDetailsWithoutLoader(adminUsersLocationDetailsApiEndpoint)\n        .subscribe(\n          (response) => {\n            this.isDataSynching = false;\n\n            console.log('Visit History Data = ' + JSON.stringify(response.response));\n            let visitDetailsList: any[] = response.response;\n\n            this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n\n              db.executeSql('SELECT data from metadata where configname=?',\n                [ConstantsProvider.CONFIG_NM_VISITS_DATA])\n                .then(\n                  res => {\n                    if (res.rows.length > 0) {\n                      this.updateVisitDetailsFromApi(visitDetailsList);\n                    } else {\n                      db.executeSql('INSERT INTO metadata(configname, data) VALUES(?,?)',\n                        [ConstantsProvider.CONFIG_NM_VISITS_DATA, JSON.stringify(visitDetailsList)])\n                        .then(res => {\n                          console.log('Inserted Visits Record');\n                          this.updateLastUpdatedTs();\n                        })\n                        .catch(e => {\n                          console.log(JSON.stringify(e))\n                          this.isDataSynching = false;\n                        })\n                    }\n                  }\n                )\n                .catch(e => {\n                  console.log(JSON.stringify(e))\n                  this.isDataSynching = false;\n                })\n            })\n              .catch(e => {\n                console.log(JSON.stringify(e))\n                this.isDataSynching = false;\n              })\n          },\n          (err) => {\n            this.isDataSynching = false;\n          }\n        );\n    } else {\n      this.commonUtility.presentErrorToast('No Internet Connection');\n      this.isDataSynching = false;\n    }\n  }\n\n  syncLocationData() {\n\n    console.log('Synching Location Data');\n    this.isDataSynching = true;\n\n    if (this.network.type != \"unknown\" && this.network.type != \"none\" && this.network.type != undefined) {\n\n      let locationDataApiEndpoint: string = ConstantsProvider.API_BASE_URL + ConstantsProvider.LOCATION_URL;\n\n      this.restService.getDetailsWithoutLoader(locationDataApiEndpoint)\n        .subscribe(\n          (response) => {\n            this.isDataSynching = false;\n\n            console.log('Location Data = ' + JSON.stringify(response.response));\n            let locationDetailsList: any[] = response.response;\n\n            this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n\n              db.executeSql('SELECT data from metadata where configname=?',\n                [ConstantsProvider.CONFIG_NM_LOCATIONS_DATA])\n                .then(\n                  res => {\n                    if (res.rows.length > 0) {\n                      this.updateLocationsDetailsFromApi(locationDetailsList);\n                    } else {\n                      db.executeSql('INSERT INTO metadata(configname, data) VALUES(?,?)',\n                        [ConstantsProvider.CONFIG_NM_LOCATIONS_DATA, JSON.stringify(locationDetailsList)])\n                        .then(res => {\n\n                          console.log('Inserted Location Record');\n\n                          this.locationsList = locationDetailsList;\n\n                          this.updateLocationLastUpdatedTs();\n\n                          this.isDataSynching = false;\n                        })\n                        .catch(e => {\n                          console.log(JSON.stringify(e))\n                          this.isDataSynching = false;\n                        })\n                    }\n                  }\n                )\n                .catch(e => {\n                  console.log(JSON.stringify(e))\n                  this.isDataSynching = false;\n                })\n            })\n              .catch(e => {\n                console.log(JSON.stringify(e))\n                this.isDataSynching = false;\n              })\n          },\n          (err) => {\n            this.isDataSynching = false;\n          }\n        );\n    } else {\n      this.commonUtility.presentErrorToast('No Internet Connection');\n      this.isDataSynching = false;\n    }\n  }\n\n  updateLocationsDetailsFromApi(locationDetailsList: any[]) {\n\n    this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n      db.executeSql('UPDATE metadata set data=? WHERE configname=?', [JSON.stringify(locationDetailsList),\n      ConstantsProvider.CONFIG_NM_LOCATIONS_DATA])\n        .then(\n          res => {\n            console.log('Updated Location Record');\n\n            this.locationsList = locationDetailsList;\n            this.updateLocationLastUpdatedTs();\n          }\n        )\n        .catch(e => {\n          console.log(JSON.stringify(e))\n        });\n    })\n      .catch(e => {\n        console.log(JSON.stringify(e))\n      })\n  }\n\n  updateLocationLastUpdatedTs() {\n\n    let tillDateUpdated = new Date().toISOString();\n    this.databaseProvider.setItem(ConstantsProvider.CONFIG_NM_LOCATION_UPDATE_TS, tillDateUpdated);\n\n    this.tillDate = tillDateUpdated;\n  }\n\n  onInput() {\n\n    console.log('onInput VisitHistoryPage');\n    console.log('searchTerm = ' + this.myInput);\n\n    let searchVal = this.myInput;\n\n    // if the value is an empty string don't filter the items\n    if (searchVal && searchVal.trim() != '') {\n\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter((visitDetailsObj: any) => {\n\n        let searchValLowerCase = searchVal.toLowerCase();\n\n        if (visitDetailsObj.siteDtls.geofenceName\n          && visitDetailsObj.siteDtls.geofenceName.toLowerCase().indexOf(searchValLowerCase) > -1)\n          return true;\n        else\n          return false;\n      });\n\n      console.log('Visits List Length = ' + this.visitHistoryList.length);\n    } else {\n      this.visitHistoryList = this.orginalListDuplicate;\n      this.originalVisitHistoryList = this.orginalListDuplicate;\n    }\n  }\n\n  updateVisitDetailsFromApi(visitDetailsList: any[]) {\n\n    this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n      db.executeSql('UPDATE metadata set data=? WHERE configname=?', [JSON.stringify(visitDetailsList),\n      ConstantsProvider.CONFIG_NM_VISITS_DATA])\n        .then(\n          res => {\n            console.log('Updated Visit History');\n\n            db.executeSql('SELECT data from metadata where configname=?',\n              [ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS_VISITS])\n              .then(\n                res => {\n                  if (res.rows.length > 0) {\n                    this.updateLastUpdatedTs();\n                  } else {\n                    db.executeSql('INSERT INTO metadata(configname, data) VALUES(?,?)',\n                      [ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS_VISITS, new Date().toISOString()])\n                      .then(res => {\n                        console.log('Inserted Visit History Last Updated Ts Record');\n                        // this.updateLastUpdatedTs();\n                      })\n                      .catch(e => console.log(JSON.stringify(e)));\n                  }\n                }\n              );\n          }\n        )\n        .catch(e => {\n          console.log(JSON.stringify(e))\n        });\n    })\n      .catch(e => {\n        console.log(JSON.stringify(e))\n      })\n  }\n\n  updateLastUpdatedTs() {\n\n    this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n      let updatedTs = new Date().toISOString();\n      this.tillDate = updatedTs;\n      db.executeSql('UPDATE metadata set data=? WHERE configname=?', [updatedTs,\n        ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS_VISITS])\n        .then(\n          res => {\n            console.log('Updated Last Updated Ts OF Visit History');\n            this.updateVisitsDataFromDB();\n            this.isDataSynching = false;\n          }\n        )\n        .catch(e => {\n          console.log(JSON.stringify(e))\n        })\n    })\n      .catch(e => {\n        console.log(JSON.stringify(e))\n      })\n  }\n\n  updateVisitsDataFromDB() {\n\n    this.databaseProvider.getMetaData(ConstantsProvider.CONFIG_NM_VISITS_DATA)\n      .subscribe(\n        res => {\n          if (res.rows.length > 0) {\n\n            console.log('Visit Data = ' + res.rows.item(0).data);\n            this.originalVisitHistoryList = JSON.parse(res.rows.item(0).data);\n\n            this.listVisitHistoryByLoggedInUser();\n          }\n\n          // this.orginalVisitList = this.visitHistoryList;\n          this.orginalListDuplicate = this.originalVisitHistoryList;\n        }\n        , (e) => {\n          console.log(JSON.stringify(e));\n        });\n  }\n\n  listVisitHistoryByLoggedInUser() {\n\n    this.databaseProvider.getMetaData(ConstantsProvider.CONFIG_NM_ROLES)\n      .subscribe(\n        res => {\n          console.log('roles DB Call Response = ' + JSON.stringify(res));\n          if (undefined == res || 'undefined' == res)\n            this.navCtrl.setRoot('LoginPage');\n          else {\n            if (res.rows.length > 0) {\n              let rowData: any = res.rows.item(0).data;\n              this.rolesArray = (null != rowData ? JSON.parse(rowData) : null);\n            } else\n              this.rolesArray = null;\n          }\n\n          console.log('rolesArray = ' + JSON.stringify(this.rolesArray));\n          if (this.rolesArray && null != this.rolesArray) {\n            if (this.rolesArray.indexOf(ConstantsProvider.ROLE_ADMIN) > -1) {\n              console.log('Admin Role Matched');\n              this.isAdmin = true;\n              this.visitHistoryList = [];\n              this.visitHistoryList = this.originalVisitHistoryList;\n              this.visitHistoryListDuplicate = this.visitHistoryList;\n              this.sortVisitHistoryByDate();\n            } else if (this.rolesArray.indexOf(ConstantsProvider.ROLE_SALES) > -1) {\n\n              console.log('Sales Role Matched');\n              this.databaseProvider.getMetaData(ConstantsProvider.CONFIG_NM_USER_DTLS)\n                .subscribe(\n                  (res) => {\n                    let userDetails: any = null;\n\n                    if (res.rows.length > 0) {\n                      let rowData: any = res.rows.item(0).data;\n                      userDetails = null != rowData ? JSON.parse(rowData) : null;\n                    } else {\n                      this.navCtrl.setRoot('LoginPage');\n                    }\n\n                    if (userDetails && null != userDetails) {\n                      let loggedInUserId: string = userDetails.userDtl.userDtlsId;\n\n                      console.log('Iterating All Visiting History');\n\n                      this.visitHistoryList = [];\n                      this.originalVisitHistoryList.forEach(\n                        (visitHistoryObj: any) => {\n                          console.log('visitor ID = ' + visitHistoryObj.visitorId + ', loggedInUserId = ' + loggedInUserId);\n                          if (visitHistoryObj.visitorId == loggedInUserId)\n                            this.visitHistoryList.push(visitHistoryObj);\n                        }\n                      );\n                      this.sortVisitHistoryByDate();\n                      this.visitHistoryListDuplicate = this.visitHistoryList;\n                    } else {\n                      this.navCtrl.setRoot('LoginPage');\n                    }\n                  }\n                );\n            } else {\n              console.log('No Role Matched')\n            }\n          } else {\n            this.navCtrl.setRoot('LoginPage');\n          }\n        }\n      );\n  }\n\n  updateGeoFence(geoFence: GeoFence) {\n\n    console.log('updateGeoFence() called');\n\n    this.createAddGeoFenceModal(geoFence, false);\n  }\n\n\n  createAddGeoFenceModal(modalData: GeoFence, isAddOperation: boolean) {\n\n    let addUpdateGeoFenceModal: Modal = this.modal.create('VisitAddSitePage', {\n      isAddOperation: isAddOperation,\n      modalData: modalData\n    });\n\n    addUpdateGeoFenceModal.present();\n\n    addUpdateGeoFenceModal.onDidDismiss(\n      (addUpdateGeoFenceModalData) => {\n        console.log('addUpdateGeoFenceModalData = ' + JSON.stringify(addUpdateGeoFenceModalData));\n\n        if (addUpdateGeoFenceModalData.isAdded) {\n\n          let updatedGeoFenceData: GeoFence = addUpdateGeoFenceModalData.geoFenceData;\n\n          let addLocationApiEndpoint: string = ConstantsProvider.API_BASE_URL + ConstantsProvider.LOCATION_TRACKING_URL;\n\n          this.restService.postDetails(addLocationApiEndpoint, updatedGeoFenceData)\n            .subscribe(\n              (response) => {\n\n                if (isAddOperation) {\n\n                  console.log('Add Location Response = ' + JSON.stringify(response));\n                  updatedGeoFenceData.geofencingDtlsId = response.response;\n                  this.locationsList.push(updatedGeoFenceData);\n                  console.log('Added Location List with new Added Data');\n                  this.commonUtility.presentToast('Added New Location Successfully', 5000);\n                } else {\n\n                  console.log('Update Location Response = ' + JSON.stringify(response));\n                  let index = this.locationsList.indexOf(modalData);\n                  if (index > -1) {\n                    this.locationsList[index] = updatedGeoFenceData;\n                    console.log('Updated locations List with updated Data');\n                    this.commonUtility.presentToast('Updated Location Successfully', 5000);\n                  }\n                }\n              }\n            );\n        }\n      });\n  }\n\n  punchEntry() {\n\n    console.log('punchEntry VisitHistoryPage');\n\n    let isExitPending: boolean = false;\n    let pendingExit: any;\n\n    this.visitHistoryList.forEach(\n      (visitHistory: any) => {\n\n        if (visitHistory.exitDt == null || visitHistory.exitDt == '') {\n          isExitPending = true;\n          pendingExit = visitHistory;\n        }\n      }\n    );\n\n    if (isExitPending) {\n      this.createPunchExitModal(pendingExit, true);\n    } else {\n      let punchEntryModal: Modal = this.modal.create('PunchEntryPage');\n\n      punchEntryModal.present();\n\n      punchEntryModal.onDidDismiss(\n        (punchEntryModalData) => {\n          console.log('punchEntryModalData = ' + JSON.stringify(punchEntryModalData));\n\n          if (punchEntryModalData.isAdded) {\n\n            let visitHistorySorted: any[] = [];\n            visitHistorySorted.push(punchEntryModalData.punchEntryData);\n            this.visitHistoryList = visitHistorySorted.concat(this.visitHistoryList);\n\n            this.databaseProvider.setItem(ConstantsProvider.CONFIG_NM_VISITS_DATA, JSON.stringify(this.visitHistoryList));\n\n            this.commonUtility.presentToast('Entry Punched Successfully', 5000);\n          }\n        }\n      );\n    }\n  }\n\n  punchExit(visitHistory: any) {\n\n    console.log('punchExit VisitHistoryPage');\n\n    this.createPunchExitModal(visitHistory, false);\n  }\n\n  createPunchExitModal(visitHistory: any, isPendingRequest: boolean) {\n\n    this.diagnostic.isLocationEnabled().then((available) => {\n      if (available) {\n        // Go To Punch Exit Page\n        let punchExitModal: Modal = this.modal.create('PunchExitPage', {\n          visitHistory: visitHistory,\n          isPendingRequest: isPendingRequest\n        });\n\n        punchExitModal.present();\n\n        punchExitModal.onDidDismiss(\n          (punchExitModalData) => {\n            console.log('punchExitModalData = ' + JSON.stringify(punchExitModalData));\n\n            if (punchExitModalData.isAdded) {\n\n              let punchExitData: any = punchExitModalData.punchExitData;\n\n              console.log('punchExitData = ' + JSON.stringify(punchExitData));\n\n              this.getCurrentLatLong()\n                .then((resp) => {\n\n                  let userLat = resp.coords.latitude;\n                  let userLong = resp.coords.longitude;\n                  console.log('exit latitude = ' + userLat + ', exit longitude = ' + userLong);\n\n                  let exitLocation: string = 'NA';\n                  this.geoCoderProvider.reverseGeocode(userLat, userLong)\n                    .subscribe(\n                      (response: any) => {\n                        console.log('Response = ' + JSON.stringify(response));\n                        exitLocation = response;\n\n                        this.punchExitApiCall(punchExitData, visitHistory, userLat, userLong, exitLocation);\n                      },\n                      (err: any) => {\n                        console.log('Error = ' + JSON.stringify(err));\n                        this.punchExitApiCall(punchExitData, visitHistory, userLat, userLong, exitLocation);\n                      }\n                    );\n                })\n                .catch(e => {\n                  console.log('Error = ' + JSON.stringify(e));\n                  this.commonUtility.presentErrorToast('Cannot Capture Location At The Moment');\n                });\n            }\n          }\n        );\n      } else {\n        this.diagnostic.switchToLocationSettings();\n      }\n    });\n  }\n\n  getCurrentLatLong() {\n\n    return this.geolocation.getCurrentPosition();\n  }\n\n  punchExitApiCall(punchExitData, visitHistory, userLat, userLong, exitLocation) {\n\n    let punchExitApiEndpoint = ConstantsProvider.API_BASE_URL + ConstantsProvider.API_ENDPOINT_USERS\n      + ConstantsProvider.URL_SEPARATOR + ConstantsProvider.API_ENDPOINT_ADMIN_USERS\n      + ConstantsProvider.URL_SEPARATOR + ConstantsProvider.API_ENDPOINT_PUNCH_SITE_EXIT;\n\n    let punchExitApiData = {\n      siteVisitHistoryId: punchExitData.siteVisitHistoryId,\n      remarks: punchExitData.remarks,\n      exitLatitude: userLat,\n      exitLongitude: userLong,\n      exitLocation: exitLocation\n    }\n\n    this.restService.putDetails(punchExitApiEndpoint, punchExitApiData)\n      .subscribe(\n        (response) => {\n          console.log('Response = ' + JSON.stringify(response.response));\n\n          let index = this.visitHistoryList.indexOf(visitHistory);\n          if (index > -1) {\n            this.visitHistoryList[index] = response.response;\n\n            this.databaseProvider.setItem(ConstantsProvider.CONFIG_NM_VISITS_DATA, JSON.stringify(this.visitHistoryList));\n\n            this.commonUtility.presentToast('Exit Punched Successfully', 5000);\n          }\n        }\n      );\n  }\n\n  presentSortingPopover(event: any) {\n\n    const popOver = this.popOverController.create('PopoverSortVisitPage', {\n      sortOrder: this.sortOrder\n    });\n\n    popOver.present({\n      ev: event\n    });\n\n    popOver.onDidDismiss(\n      (data) => {\n        if (data && data.sortData) {\n          let selectedSortOrder: number = Number.parseInt(data.sortOrder);\n          console.log('selectedSortOrder = ' + selectedSortOrder);\n\n          switch (selectedSortOrder) {\n\n            case 1:   //1 = Sort Data\n              let selectCustomerModal: Modal = this.modal.create('CustomerSelectionPage', {\n                modalData: null,\n                fromDate: '',\n                toDate: '',\n                salesExecutive: '',\n                isAddOperation: true\n              });\n\n              selectCustomerModal.present();\n\n              selectCustomerModal.onDidDismiss(\n                (selectCustomerModalData) => {\n                  console.log('selectCustomerModalData = ' + JSON.stringify(selectCustomerModalData));\n\n                  if (selectCustomerModalData.isAdded) {\n                    this.selectedCustomer = selectCustomerModalData.selectedCustomerDetails;\n                    this.fromDate = selectCustomerModalData.fromDate;\n                    this.toDate = selectCustomerModalData.toDate;\n                    this.salesExecutive = selectCustomerModalData.salesExecutive;\n\n                    let isCustomerSelected: boolean = this.selectedCustomer.cardName == '' ? false : true;\n\n                    this.filterVisitDataByAppliedFilters(isCustomerSelected,\n                      !this.isEmpty(this.fromDate), !this.isEmpty(this.toDate), !this.isEmpty(this.salesExecutive));\n                  }\n                });\n              this.sortOrder = selectedSortOrder;\n              break;\n\n            case 2:   //2 = Clear Sort   \n              this.updateVisitsDataFromDB();\n              this.sortVisitHistoryByDate();\n              this.sortOrder = selectedSortOrder;\n              break;\n\n            default:\n              console.log('Invalid Sort order selected');\n              break;\n          }\n        }\n      });\n  }\n\n  sortVisitHistoryByDate() {\n    this.visitHistoryList.sort(\n\n      (a, b) => this.momentjs(this.momentjs(a.entryDt, 'DDMMYY')).format('YYYY-MM-DD') >= this.momentjs(this.momentjs(b.entryDt, 'DDMMYY')).format('YYYY-MM-DD') ? -1 : 1\n    );\n  }\n\n  filterVisitDataByAppliedFilters(isCustomerSelected: boolean, isFromDateApplied: boolean,\n    isToDateApplied: boolean, isSalesExecutiveSelected: boolean) {\n\n    console.log('isCustomerSelected = ' + isCustomerSelected + ', isFromDateApplied = ' + isFromDateApplied\n      + ', isToDateApplied = ' + isToDateApplied + ', isSalesExecutiveSelected = ' + isSalesExecutiveSelected);\n\n    if (isCustomerSelected && isFromDateApplied && isToDateApplied && isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (\n            visitHistory.siteDtls.cardCode == this.selectedCustomer.cardCode\n            && visitHistory.visitorId == this.salesExecutive.userDtlsId\n            && visitorEntryDtFormatted >= this.fromDate\n            && visitorEntryDtFormatted <= this.toDate\n          )\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isCustomerSelected && isFromDateApplied && isToDateApplied && !isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (visitHistory.siteDtls.cardCode == this.selectedCustomer.cardCode\n            && visitorEntryDtFormatted >= this.fromDate\n            && visitorEntryDtFormatted <= this.toDate\n          )\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isCustomerSelected && isFromDateApplied && !isToDateApplied && !isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (\n            visitHistory.siteDtls.cardCode == this.selectedCustomer.cardCode\n            && visitorEntryDtFormatted >= this.fromDate\n          )\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isCustomerSelected && !isFromDateApplied && !isToDateApplied && !isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          console.log('visitEntryDt = ' + this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD')\n            + ', fromDate = ' + this.fromDate + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (visitHistory.siteDtls.cardCode == this.selectedCustomer.cardCode)\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isCustomerSelected && !isFromDateApplied && isToDateApplied && !isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (\n            visitHistory.siteDtls.cardCode == this.selectedCustomer.cardCode\n            && visitorEntryDtFormatted <= this.toDate\n          )\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isFromDateApplied && !isCustomerSelected && isToDateApplied && isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (\n            visitHistory.visitorId == this.salesExecutive.userDtlsId\n            && visitorEntryDtFormatted >= this.fromDate\n            && visitorEntryDtFormatted <= this.toDate\n          )\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isFromDateApplied && !isCustomerSelected && isToDateApplied && !isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (visitorEntryDtFormatted >= this.fromDate && visitorEntryDtFormatted <= this.toDate)\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isFromDateApplied && !isCustomerSelected && !isToDateApplied && isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (\n            visitHistory.visitorId == this.salesExecutive.userDtlsId\n            && visitorEntryDtFormatted >= this.fromDate\n          )\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isFromDateApplied && !isCustomerSelected && !isToDateApplied && !isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (visitorEntryDtFormatted >= this.fromDate)\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isToDateApplied && !isFromDateApplied && !isCustomerSelected && isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (\n            visitHistory.visitorId == this.salesExecutive.userDtlsId\n            && visitorEntryDtFormatted <= this.toDate\n          )\n            return true;\n          else\n            return false;\n        }\n      );\n    } else if (isToDateApplied && !isFromDateApplied && !isCustomerSelected && !isSalesExecutiveSelected) {\n      this.visitHistoryList = this.visitHistoryListDuplicate.filter(\n        (visitHistory: any) => {\n\n          let visitorEntryDtFormatted = this.momentjs(this.momentjs(visitHistory.entryDt, 'DDMMYY')).format('YYYY-MM-DD');\n\n          console.log('visitEntryDt = ' + visitorEntryDtFormatted + ', fromDate = ' + this.fromDate\n            + ', toDate = ' + this.toDate + ', cardCode = ' + visitHistory.siteDtls.cardCode);\n\n          if (visitorEntryDtFormatted <= this.toDate)\n            return true;\n          else\n            return false;\n        }\n      );\n    }\n\n    this.sortVisitHistoryByDate();\n  }\n\n  isEmpty(valueToCheck: any) {\n\n    if (\n      undefined == valueToCheck || 'undefined' == valueToCheck\n      || valueToCheck == '' || valueToCheck == null\n      || {} == valueToCheck || '{}' == valueToCheck\n    )\n      return true;\n    else\n      return false;\n  }\n\n  downloadExcel() {\n\n    console.log('downloadExcel VisitHistoryPage');\n\n    this.navCtrl.push('DownloadDetailsPage', {\n      case: \"VISIT_HISTORY_XLSX_DOWNLAOD\",\n      visitHistoryExcelData: this.visitHistoryList\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/visit-history/visit-history.ts"],"sourceRoot":""}