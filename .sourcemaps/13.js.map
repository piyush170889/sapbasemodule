{"version":3,"sources":["../../src/pages/customer-mgmt/customer-mgmt.module.ts","../../src/pages/order-mgmt/order-mgmt.ts","../../src/pages/customer-mgmt/customer-mgmt.ts"],"names":[],"mappings":"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","file":"13.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CustomerMgmtPage } from './customer-mgmt';\n\n@NgModule({\n  declarations: [\n    CustomerMgmtPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(CustomerMgmtPage),\n  ],\n})\nexport class CustomerMgmtPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/customer-mgmt/customer-mgmt.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ActionSheetController } from 'ionic-angular';\nimport { CommonUtilityProvider } from \"../../providers/common-utility/common-utility\";\nimport { ConstantsProvider } from \"../../providers/constants/constants\";\nimport { RestserviceProvider } from '../../providers/restservice/restservice';\n\n/**\n * Generated class for the OrderMgmtPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-order-mgmt',\n  templateUrl: 'order-mgmt.html',\n})\nexport class OrderMgmtPage {\n\n  orderDetailsList: any[] = [];\n  limit: number = 10;\n  pageNo: number = 1;\n  customer: any = null;\n  myInput: string = '';\n  originalOrdersList: any[] = [];\n  bookedOrderCount: number = 0;\n\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    public actionSheetCtrl: ActionSheetController,\n    public commonUtility: CommonUtilityProvider,\n    public restService: RestserviceProvider) {\n\n    console.log('Name - ' + OrderMgmtPage.name);\n    this.customer = this.navParams.get('customer');\n\n    let ordersListApi: string = '';\n\n    if (null == this.customer || this.customer == undefined)\n      ordersListApi = ConstantsProvider.API_BASE_URL + ConstantsProvider.API_ENDPOINT_ORDERS\n        + \"?\" + ConstantsProvider.URL_PARAM_PAGE_NO + this.pageNo + ConstantsProvider.URL_PARAM_LIMIT + this.limit;\n    else\n      ordersListApi = ConstantsProvider.API_BASE_URL + ConstantsProvider.API_ENDPOINT_CUST_DTLS\n        + ConstantsProvider.URL_SEPARATOR + this.customer.customerDetails.cardCode\n        + ConstantsProvider.URL_SEPARATOR + ConstantsProvider.API_ENDPOINT_ORDERS\n    // + \"?\" + ConstantsProvider.URL_PARAM_PAGE_NO + this.pageNo + ConstantsProvider.URL_PARAM_LIMIT + this.limit;\n\n    this.restService.getDetails(ordersListApi)\n      .subscribe(\n        (response) => {\n          console.log('Response = ' + JSON.stringify(response));\n\n          this.orderDetailsList = response.response.orderDetailsList;\n          this.bookedOrderCount = response.response.bookedOrderCount;\n        }\n      );\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad OrderMgmtPage');\n  }\n\n  naviagteToOrderCreatePage() {\n\n    if (this.commonUtility.isNetworkAvailable()) {\n      this.navCtrl.push('CustomerMgmtPage', {\n        referrer: OrderMgmtPage.name\n      });\n    }\n  }\n\n\n  openOrderDetails(orderDtls) {\n\n    console.log('openOrderDetails()');\n    if (this.commonUtility.isNetworkAvailable()) {\n      this.navCtrl.push('OrderDetailsPage', {\n        orderDtlsId: orderDtls.docEntry,\n        orderDtls: orderDtls\n      });\n    }\n  }\n\n\n  onInput() {\n\n    console.log('searchTerm = ' + this.myInput);\n\n    let searchVal = this.myInput;\n\n    // if the value is an empty string don't filter the items\n    if (searchVal && searchVal.trim() != '') {\n\n      this.orderDetailsList = this.originalOrdersList.filter((orderDetailsObj: any) => {\n\n        let searchValLowerCase = searchVal.toLowerCase();\n\n        console.log('Doc Num = ' + orderDetailsObj.docNum + ', Card name = ' + orderDetailsObj.cardName);\n        if (orderDetailsObj.cardName.toLowerCase().indexOf(searchValLowerCase) > -1\n          || orderDetailsObj.docNum == searchValLowerCase)\n          return true;\n        else\n          return false;\n      });\n\n      console.log('Customers List Length = ' + this.orderDetailsList.length);\n    } else {\n      this.orderDetailsList = this.originalOrdersList;\n    }\n  }\n\n  openBookedOrders() {\n\n    console.log('openBookedOrders OrderMgmtPage');\n    if (this.bookedOrderCount > 0) {\n      if (this.commonUtility.isNetworkAvailable()) {\n        this.navCtrl.push('OrdersBookedPage');\n      }\n    } else {\n      this.commonUtility.presentErrorToast('No Booked Orders To Show');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/order-mgmt/order-mgmt.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, PopoverController } from 'ionic-angular';\nimport { CommonUtilityProvider } from '../../providers/common-utility/common-utility';\nimport { RestserviceProvider } from '../../providers/restservice/restservice';\nimport { ConstantsProvider } from '../../providers/constants/constants';\nimport { DatabaseProvider } from '../../providers/database/database';\nimport { DatePipe } from '@angular/common';\nimport { SQLiteObject } from '@ionic-native/sqlite';\nimport { Network } from '@ionic-native/network';\nimport { OrderMgmtPage } from '../order-mgmt/order-mgmt';\n\n/**\n * Generated class for the CustomerMgmtPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-customer-mgmt',\n  templateUrl: 'customer-mgmt.html',\n})\nexport class CustomerMgmtPage {\n\n  customersList: any[] = [];\n  paginationDetails: any = {\n    currentPageNo: 1,\n    totalPages: 0\n  };\n  isPaginatedResultsFetched: boolean = true;\n  orginalCustomersList: any[] = [];\n  orginalListDuplicate: any[] = [];\n  myInput: string = '';\n  totalOutstanding: number = 0;\n  referrer: string = null;\n  currentSortOrder: number = 0;\n  displayCriteria: any = '0';\n  tillDate: any = '';\n  isDataSynching: boolean = false;\n\n\n  customerMgmtApiEndpoint: string = ConstantsProvider.API_BASE_URL\n    + ConstantsProvider.API_ENDPOINT_CUSTOMER_MGMT;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    private commonUtility: CommonUtilityProvider,\n    private popOverController: PopoverController,\n    private restService: RestserviceProvider,\n    private network: Network,\n    private databaseProvider: DatabaseProvider) {\n\n    this.isDataSynching = false;\n\n    this.databaseProvider.getLastUpdatedTs()\n      .subscribe(response => {\n        if (response) {\n          this.tillDate = response.rows.item(0).data;\n          console.log('tillDate = ' + this.tillDate + ', Response = ' + JSON.stringify(response));\n\n          this.updateCustomerDataFromDB();\n\n          let timeSinceLastSync: number = this.commonUtility.calculateDiffInMins(new Date(this.tillDate), new Date());\n          console.log('Till Date : ' + this.tillDate + ', Current Date = ' + new Date() + ', timeSinceLastSync = ' + timeSinceLastSync);\n\n          if (timeSinceLastSync >= 30) {\n            console.log('Synching Data');\n            this.syncCustomerData();\n          } else {\n            console.log('Not Synching Data');\n          }\n        }\n      }\n      );\n\n    this.referrer = this.navParams.get('referrer');\n\n\n    // this.restService.getDetails(this.getCustMgmtApiEndpoint(1))\n    //   .subscribe(\n    //     (response) => {\n    //       console.log('Response = ' + JSON.stringify(response.response));\n    //       this.customersList = response.response;\n    //       this.orginalCustomersList = this.customersList;\n    //       this.orginalListDuplicate = this.customersList;\n    //       this.totalOutstanding = response.metaData;\n\n    //       //: Update Pagiination Details\n    //       this.paginationDetails = response.paginationDetails;\n    //       console.log('this.paginationDetails = ' + JSON.stringify(this.paginationDetails));\n    //     }\n    //   );\n  }\n\n  updateCustomerDataFromDB() {\n\n    this.databaseProvider.getCustomerData()\n      .subscribe(\n        res => {\n          if (res.rows.length > 0) {\n            console.log('CustData = ' + res.rows.item(0).data);\n            this.customersList = JSON.parse(res.rows.item(0).data);\n          }\n\n          this.orginalCustomersList = this.customersList;\n          this.orginalListDuplicate = this.customersList;\n\n          this.setCustomerBalanceFromOriginalList();\n        }\n        , (e) => {\n          console.log(JSON.stringify(e));\n        });\n  }\n\n  setCustomerBalanceFromOriginalList() {\n\n    let sortedList: any[] = [];\n    this.totalOutstanding = 0;\n    // this.customersList.forEach(\n    this.orginalCustomersList.forEach(\n      (customer) => {\n        let custBal = customer.customerDetails.balance;\n        this.totalOutstanding = this.totalOutstanding + custBal;\n\n        customer.calculatedBal = custBal;\n\n        sortedList.push(customer);\n      }\n    );\n\n    this.customersList = sortedList;\n    console.log('total outstanding: ' + this.totalOutstanding.toFixed(2));\n    this.totalOutstanding = Number.parseFloat(this.totalOutstanding.toFixed(2));\n  }\n\n  getCustMgmtApiEndpoint(pageNo: number) {\n\n    // return this.customerMgmtApiEndpoint + pageNo;\n    return this.customerMgmtApiEndpoint;\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad CustomerMgmtPage');\n  }\n\n  // getRecordsPaginated(infiniteScrollEvent: any) {\n\n  //   console.log('getRecordsPaginated CustMgmtPage');\n\n  //   let currentPageNo: number = this.paginationDetails.currentPageNo;\n  //   let totalPages: number = this.paginationDetails.totalPages;\n\n  //   if (this.isPaginatedResultsFetched) {\n\n  //     if (this.commonUtility.isNetworkAvailable()) {\n\n  //       if (currentPageNo < totalPages) {\n  //         currentPageNo = currentPageNo + 1;\n  //         console.log('currentPageNo = ' + currentPageNo);\n  //         setTimeout(() => {\n\n  //           this.isPaginatedResultsFetched = false;\n\n  //           this.restService.getDetails(this.getCustMgmtApiEndpoint(currentPageNo))\n  //             .subscribe(\n  //               (response) => {\n  //                 this.isPaginatedResultsFetched = true;\n  //                 console.log('isPaginatedResultsFetched = ' + this.isPaginatedResultsFetched);\n\n  //                 this.customersList = this.customersList.concat(response.response);\n  //                 this.orginalCustomersList = this.customersList;\n\n  //                 this.paginationDetails = response.paginationDetails;\n\n  //                 infiniteScrollEvent.complete();\n  //               },\n  //               () => {\n  //                 this.isPaginatedResultsFetched = true;\n  //                 infiniteScrollEvent.complete();\n  //                 console.log('isPaginatedResultsFetched = ' + this.isPaginatedResultsFetched);\n  //               }\n  //             );\n  //         }, 500);\n  //       } else {\n  //         infiniteScrollEvent.enable(false);\n  //       }\n  //     }\n  //   }\n  // }\n\n  onInput() {\n\n    console.log('searchTerm = ' + this.myInput);\n\n    let searchVal = this.myInput;\n\n    // if the value is an empty string don't filter the items\n    if (searchVal && searchVal.trim() != '') {\n\n      this.customersList = this.orginalCustomersList.filter((customerDetailsObj: any) => {\n\n        let searchValLowerCase = searchVal.toLowerCase();\n\n        if ((null != customerDetailsObj.customerDetails.cardName && customerDetailsObj.customerDetails.cardName.toLowerCase().indexOf(searchValLowerCase) > -1))\n          // || (customerDetailsObj.customerDetails.phone1 != null\n          //   && customerDetailsObj.customerDetails.phone1.toLowerCase().indexOf(searchValLowerCase) > -1)\n          // || customerDetailsObj.customerDetails.cardCode.toLowerCase().indexOf(searchValLowerCase) > -1)\n          return true;\n        else\n          return false;\n      });\n\n      console.log('Customers List Length = ' + this.customersList.length);\n    } else {\n      this.customersList = this.orginalListDuplicate;\n      this.orginalCustomersList = this.orginalListDuplicate;\n    }\n  }\n\n  searchCustomers() {\n\n    console.log('searchTerm = ' + this.myInput);\n\n    let searchVal = this.myInput;\n\n    // if the value is an empty string don't filter the items\n    if (searchVal && searchVal.trim() != '') {\n\n      let searchCustomerApi = ConstantsProvider.API_BASE_URL + ConstantsProvider.API_ENDPOINT_CUST_DTLS\n        + ConstantsProvider.URL_SEPARATOR + \"search-term?search-term=\" + searchVal;\n\n      this.restService.getDetails(searchCustomerApi)\n        .subscribe(\n          (response) => {\n            this.customersList = response.response;\n            this.orginalCustomersList = this.customersList;\n          }\n        )\n      console.log('Customers List Length = ' + this.customersList.length);\n    } else {\n      this.customersList = this.orginalListDuplicate;\n      this.orginalCustomersList = this.orginalListDuplicate;\n    }\n  }\n\n  viewCustomerDetails(customer: any) {\n\n    console.log('viewCustomerDetails CustomerMgmtPage');\n\n    if (null != this.referrer && undefined != this.referrer && this.referrer != '') {\n      switch (this.referrer) {\n\n        case OrderMgmtPage.name:\n          this.navCtrl.push('OrderAddPage', {\n            customer: customer\n          });\n          break;\n\n        default:\n          this.commonUtility.presentErrorToast('Invalid Referrer Supplied');\n      }\n    } else {\n\n      this.navCtrl.push('CustomerDetailsPage', {\n        customer: customer,\n        isModalData: false\n      });\n    }\n\n    // if (this.commonUtility.isNetworkAvailable()) {\n    //   console.log('referrer = ' + this.referrer);\n\n    //   if (null != this.referrer && undefined != this.referrer && this.referrer != '') {\n    //     switch (this.referrer) {\n\n    //       case OrderMgmtPage.name:\n    //         this.navCtrl.push(OrderAddPage, {\n    //           customer: customer\n    //         });\n    //         break;\n\n    //       default:\n    //         this.commonUtility.presentErrorToast('Invalid Referrer Supplied');\n    //     }\n    //   } else {\n    //     this.navCtrl.push(CustomerDetailsPage, {\n    //       customer: customer,\n    //       isModalData: false\n    //     });\n    //   }\n    // }\n  }\n\n\n  // callCust(customer) {\n\n  //   console.log('Calling Customer on : ' + customer.customerDetails.cellular);\n  //   this.commonUtility.callNumber(customer.customerDetails.cellular, true);\n  // }\n\n\n  callCust(custContactNumber: any) {\n\n    console.log('Calling Customer on : ' + custContactNumber);\n    this.commonUtility.callNumber(custContactNumber, true);\n  }\n\n  presentPopoverDataSorting(event: any) {\n\n    const popOver = this.popOverController.create('PopoverSortFiltersPage', {\n      sortOrder: this.currentSortOrder,\n      isCustMgmt: true\n    });\n\n    popOver.present({\n      ev: event\n    });\n\n    popOver.onDidDismiss(\n      (data) => {\n        if (data && data.sortData) {\n          let selectedSortOrder: number = Number.parseInt(data.sortOrder);\n          console.log('selectedSortOrder = ' + selectedSortOrder);\n\n          this.sortDataBySelectedSortOrder(selectedSortOrder);\n        }\n      });\n  }\n\n  sortDataBySelectedSortOrder(selectedSortOrder: number) {\n\n    console.log('selectedSortOrder = ' + selectedSortOrder);\n\n    switch (selectedSortOrder) {\n\n      // 1 = Amount (Low - High)\n      case 1:\n        this.customersList.sort(\n          (a, b) => a.calculatedBal <= b.calculatedBal ? -1 : 1\n          // (a, b) => a.customerDetails.balance <= b.customerDetails.balance ? -1 : 1\n        );\n        break;\n\n      // 2 = Amount (High - Low) \n      case 2:\n        this.customersList.sort(\n          (a, b) => a.calculatedBal >= b.calculatedBal ? -1 : 1\n          // (a, b) => a.customerDetails.balance >= b.customerDetails.balance ? -1 : 1\n        );\n        break;\n\n      // 3 = Due Days (Low - High)\n      case 3:\n        this.customersList.sort(\n          (a, b) => a.dueDateInDays <= b.dueDateInDays ? -1 : 1\n        );\n        break;\n\n      // 4 = Due Days (High - Low)\n      case 4:\n        this.customersList.sort(\n          (a, b) => a.dueDateInDays >= b.dueDateInDays ? -1 : 1\n        );\n        break;\n\n      default:\n        break;\n    }\n\n    this.currentSortOrder = selectedSortOrder;\n  }\n\n  presentPopoverAging(event: any) {\n\n    const popOver = this.popOverController.create('AgingFilterPopoverPage', {\n      agingperiod: this.displayCriteria\n    });\n    popOver.present({\n      ev: event\n    });\n\n    popOver.onDidDismiss(\n      (data) => {\n        if (data && data.showAging) {\n          let selectedAgingPeriod: number = Number.parseInt(data.agingPeriod);\n          console.log('selectedAgingPeriod = ' + selectedAgingPeriod);\n\n          if (selectedAgingPeriod == 0) {\n            this.setCustomerBalanceFromOriginalList();\n          } else {\n            console.log('tillDate = ' + this.tillDate);\n            let dateToCompare: Date = new Date(this.tillDate);\n\n            console.log('Active Date = ' + dateToCompare.toISOString()\n              + ', selectedAgingPeriod = ' + selectedAgingPeriod);\n\n            dateToCompare.setDate(dateToCompare.getDate() - selectedAgingPeriod);\n            console.log('Date Back by selectedAgingPeriod Days = ' + dateToCompare.toISOString());\n\n            let dateToCompareFormatted: any = new DatePipe(ConstantsProvider.APP_DATE_LOCALE).transform(dateToCompare.toISOString(), 'yyyy-MM-dd');\n            console.log('dateToCompareFormatted = ' + dateToCompareFormatted);\n\n            let sortedList: any[] = [];\n            this.totalOutstanding = 0;\n\n            this.orginalCustomersList.forEach((customer: any) => {\n\n              // let custDebit: number = 0;\n              // let custCredit: number = 0;\n              let custBalance: number = 0;\n\n              if (customer.customerInvoicesList != null && customer.customerInvoicesList.length > 0) {\n                customer.customerInvoicesList.forEach(\n                  (invoice: any) => {\n                    if (invoice.invoiceDate < dateToCompareFormatted\n                      && (invoice.type == 'IN' || invoice.type == 'OB' || invoice.type == 'JE')) {\n                      // custDebit = custDebit + Number.parseFloat(invoice.debit);\n                      // custCredit = custCredit + Number.parseFloat(invoice.credit);\n                      custBalance = custBalance + Number.parseFloat(invoice.grossTotal);\n                    }\n                  }\n                );\n              }\n\n              // let custBalance: number = custDebit - custCredit;\n\n              if (custBalance > 0) {\n                this.totalOutstanding = this.totalOutstanding + custBalance;\n\n                customer.calculatedBal = custBalance;\n                console.log('calculatedBal = ' + customer.calculatedBal);\n\n                sortedList.push(customer);\n              }\n            });\n\n            this.customersList = sortedList;\n          }\n\n          this.displayCriteria = selectedAgingPeriod;\n          this.sortDataBySelectedSortOrder(this.currentSortOrder);\n        }\n      }\n    );\n  }\n\n  syncCustomerData() {\n\n    this.databaseProvider.getItem(ConstantsProvider.CONFIG_NM_ACK_INV_OFFLINE)\n      .then(\n        (res) => {\n          console.log(' Offline Ackn Resp = ' + JSON.stringify(res));\n\n          if (res.rows.length > 0) {\n            let invoiceAckOffData: any[] = JSON.parse(res.rows.item(0).data);\n\n            let invoiceAckOffApiEndpoint: string = ConstantsProvider.API_BASE_URL\n              + ConstantsProvider.API_ENDPOINT_CUST_DTLS + ConstantsProvider.URL_SEPARATOR\n              + ConstantsProvider.API_ENDPOINT_INVOICE_ACKNOWLEDGEMENT;\n\n            this.restService.putDetails(invoiceAckOffApiEndpoint, invoiceAckOffData)\n              .subscribe(\n                (res) => {\n                  console.log('Sync Response = ' + JSON.stringify(res));\n\n                  this.databaseProvider.deleteItem(ConstantsProvider.CONFIG_NM_ACK_INV_OFFLINE)\n                    .subscribe(\n                      (res) => {\n                        console.log('Deleted Invoice Offline Acknowledgement After Sync');\n\n                        this.startSynchingCustomerData();\n                      }\n                    );\n                  // .catch(\n                  //   (e) => {\n                  //     console.log('Error = ' + JSON.stringify(e));\n                  //     this.commonUtility.presentErrorToast('Error Synching Customer Data');\n                  //   }\n                  // );\n                }\n              );\n          } else {\n            this.startSynchingCustomerData();\n          }\n        }\n      )\n      .catch(\n        (e) => {\n          console.log('Error = ' + JSON.stringify(e));\n          this.commonUtility.presentErrorToast('Error Synching Customer Data');\n        }\n      );\n  }\n\n  updateCustomerDetailsFromApi(customersDetailsList: any[]) {\n\n    this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n      db.executeSql('UPDATE metadata set data=? WHERE configname=?', [JSON.stringify(customersDetailsList),\n      ConstantsProvider.CONFIG_NM_CUST_DATA])\n        .then(\n          res => {\n            console.log('Updated Customer Record');\n\n            db.executeSql('SELECT data from metadata where configname=?',\n              [ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS])\n              .then(\n                res => {\n                  if (res.rows.length > 0) {\n                    this.updateLastUpdatedTs();\n                  } else {\n                    db.executeSql('INSERT INTO metadata(configname, data) VALUES(?,?)',\n                      [ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS, ''])\n                      .then(res => {\n                        console.log('Inserted Empty Customer Record');\n                        this.updateLastUpdatedTs();\n                      })\n                      .catch(e => console.log(JSON.stringify(e)));\n                  }\n                }\n              );\n          }\n        )\n        .catch(e => {\n          console.log(JSON.stringify(e))\n        });\n    })\n      .catch(e => {\n        console.log(JSON.stringify(e))\n      })\n  }\n\n  updateLastUpdatedTs() {\n\n    this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n      let updatedTs = new Date().toISOString();\n      this.tillDate = updatedTs;\n      db.executeSql('UPDATE metadata set data=? WHERE configname=?', [updatedTs,\n        ConstantsProvider.CONFIG_NM_LAST_UPDATED_TS])\n        .then(\n          res => {\n            console.log('Updated Last Updated Ts');\n            this.updateCustomerDataFromDB();\n            this.isDataSynching = false;\n          }\n        )\n        .catch(e => {\n          console.log(JSON.stringify(e))\n        })\n    })\n      .catch(e => {\n        console.log(JSON.stringify(e))\n      })\n  }\n\n  startSynchingCustomerData() {\n\n    let customersDetailsApiEndpoint = ConstantsProvider.API_BASE_URL\n      + ConstantsProvider.API_ENDPOINT_CUST_DTLS + ConstantsProvider.URL_SEPARATOR\n      + ConstantsProvider.API_ENDPOINT_SYNC;\n\n    this.isDataSynching = true;\n\n    if (this.network.type != \"unknown\" && this.network.type != \"none\" && this.network.type != undefined) {\n\n      this.restService.getDetailsWithoutLoader(customersDetailsApiEndpoint)\n        .subscribe(\n          (response) => {\n            this.isDataSynching = false;\n\n            console.log('Customers Data = ' + JSON.stringify(response.response));\n            let customersDetailsList: any[] = response.response;\n\n            this.databaseProvider.initializeSqlLiteDb().then((db: SQLiteObject) => {\n\n              db.executeSql('SELECT data from metadata where configname=?',\n                [ConstantsProvider.CONFIG_NM_CUST_DATA])\n                .then(\n                  res => {\n                    if (res.rows.length > 0) {\n                      this.updateCustomerDetailsFromApi(customersDetailsList);\n                    } else {\n                      db.executeSql('INSERT INTO metadata(configname, data) VALUES(?,?)',\n                        [ConstantsProvider.CONFIG_NM_CUST_DATA, ''])\n                        .then(res => {\n                          console.log('Inserted Empty Customer Record');\n                          this.updateCustomerDetailsFromApi(customersDetailsList);\n                        })\n                        .catch(e => {\n                          console.log(JSON.stringify(e))\n                          this.isDataSynching = false;\n                        })\n                    }\n                  }\n                )\n                .catch(e => {\n                  console.log(JSON.stringify(e))\n                  this.isDataSynching = false;\n                })\n            })\n              .catch(e => {\n                console.log(JSON.stringify(e))\n                this.isDataSynching = false;\n              })\n          },\n          (err) => {\n            this.isDataSynching = false;\n          }\n        );\n    } else {\n      this.commonUtility.presentErrorToast('No Internet Connection');\n      this.isDataSynching = false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/customer-mgmt/customer-mgmt.ts"],"sourceRoot":""}